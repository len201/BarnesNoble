[{"/Users/cctnsw/Desktop/BarnesNoble/frontend/src/index.js":"1","/Users/cctnsw/Desktop/BarnesNoble/frontend/src/App.js":"2","/Users/cctnsw/Desktop/BarnesNoble/frontend/src/reportWebVitals.js":"3","/Users/cctnsw/Desktop/BarnesNoble/frontend/src/components/Footer.jsx":"4","/Users/cctnsw/Desktop/BarnesNoble/frontend/src/components/Header.jsx":"5","/Users/cctnsw/Desktop/BarnesNoble/frontend/src/screens/HomeScreen.jsx":"6","/Users/cctnsw/Desktop/BarnesNoble/frontend/src/screens/ProductScreen.jsx":"7","/Users/cctnsw/Desktop/BarnesNoble/frontend/src/components/Rating.jsx":"8","/Users/cctnsw/Desktop/BarnesNoble/frontend/src/components/Product.jsx":"9"},{"size":542,"mtime":1607231652155,"results":"10","hashOfConfig":"11"},{"size":773,"mtime":1607237537247,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1607229141925,"results":"13","hashOfConfig":"11"},{"size":372,"mtime":1607232373278,"results":"14","hashOfConfig":"11"},{"size":969,"mtime":1607237304905,"results":"15","hashOfConfig":"11"},{"size":1666,"mtime":1607278569112,"results":"16","hashOfConfig":"11"},{"size":7788,"mtime":1607237481513,"results":"17","hashOfConfig":"11"},{"size":1557,"mtime":1607235360426,"results":"18","hashOfConfig":"11"},{"size":804,"mtime":1607275383294,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1d1crfy",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/cctnsw/Desktop/BarnesNoble/frontend/src/index.js",[],["44","45"],"/Users/cctnsw/Desktop/BarnesNoble/frontend/src/App.js",["46"],"import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport HomeScreen from'./screens/HomeScreen'\nimport ProductScreen from'./screens/ProductScreen'\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n      <Container>\n      <h1>Welcome to Barnes & Noble</h1>\n      </Container>\n      <Container>\n        <Route path='/' component={HomeScreen} exact />\n        {/* :id as the placeholder */}\n        <Route path='/product/:id' component={ProductScreen} />      \n      </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\nexport default App;\n","/Users/cctnsw/Desktop/BarnesNoble/frontend/src/reportWebVitals.js",[],"/Users/cctnsw/Desktop/BarnesNoble/frontend/src/components/Footer.jsx",["47"],"import React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst Footer = () => {\n    return (\n        <footer>\n            <Container>\n                <Row>\n                    <Col className='text-center py-3'>Copyright &copy; xwd</Col>\n                </Row>\n            </Container>\n        </footer>\n    )\n}\nexport default Footer","/Users/cctnsw/Desktop/BarnesNoble/frontend/src/components/Header.jsx",["48"],"import React, { Component } from \"react\";\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Navbar, Nav, Container} from \"react-bootstrap\";\n\nconst Header = () => {\n  return (\n    <header>\n      <Navbar bg=\"dark\" variant='dark' expand=\"lg\" collapseOnSelect>\n      <Container>\n      <LinkContainer to='/'>\n        <Navbar.Brand href='/'>Barnes & Noble</Navbar.Brand>\n        </LinkContainer>\n\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ml-auto\">\n\n          <LinkContainer to='/cart'>\n            <Nav.Link>\n            <i className='fas fa-shopping-cart'></i>Cart\n            </Nav.Link>\n            </LinkContainer>\n            \n            <Nav.Link href='/login'>\n            <i className='fas fa-user'></i>Sign In\n            </Nav.Link>\n         </Nav>\n        </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  );\n};\nexport default Header;\n","/Users/cctnsw/Desktop/BarnesNoble/frontend/src/screens/HomeScreen.jsx",[],"/Users/cctnsw/Desktop/BarnesNoble/frontend/src/screens/ProductScreen.jsx",["49"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Meta from '../components/Meta'\nimport {\n  listProductDetails,\n  createProductReview,\n} from '../actions/productActions'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\n\nconst ProductScreen = ({ history, match }) => {\n  const [qty, setQty] = useState(1)\n  const [rating, setRating] = useState(0)\n  const [comment, setComment] = useState('')\n\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector((state) => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const productReviewCreate = useSelector((state) => state.productReviewCreate)\n  const {\n    success: successProductReview,\n    loading: loadingProductReview,\n    error: errorProductReview,\n  } = productReviewCreate\n\n  useEffect(() => {\n    if (successProductReview) {\n      setRating(0)\n      setComment('')\n    }\n    if (!product._id || product._id !== match.params.id) {\n      dispatch(listProductDetails(match.params.id))\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n    }\n  }, [dispatch, match, successProductReview])\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(\n      createProductReview(match.params.id, {\n        rating,\n        comment,\n      })\n    )\n  }\n\n  return (\n    <>\n      <Link className='btn btn-light my-3' to='/'>\n        Go Back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Meta title={product.name} />\n          <Row>\n            <Col md={6}>\n              <Image src={product.image} alt={product.name} fluid />\n            </Col>\n            <Col md={3}>\n              <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <h3>{product.name}</h3>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Rating\n                    value={product.rating}\n                    text={`${product.numReviews} reviews`}\n                  />\n                </ListGroup.Item>\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\n                <ListGroup.Item>\n                  Description: {product.description}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col md={3}>\n              <Card>\n                <ListGroup variant='flush'>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Price:</Col>\n                      <Col>\n                        <strong>${product.price}</strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Status:</Col>\n                      <Col>\n                        {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  {product.countInStock > 0 && (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Qty</Col>\n                        <Col>\n                          <Form.Control\n                            as='select'\n                            value={qty}\n                            onChange={(e) => setQty(e.target.value)}\n                          >\n                            {[...Array(product.countInStock).keys()].map(\n                              (x) => (\n                                <option key={x + 1} value={x + 1}>\n                                  {x + 1}\n                                </option>\n                              )\n                            )}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n\n                  <ListGroup.Item>\n                    <Button\n                      onClick={addToCartHandler}\n                      className='btn-block'\n                      type='button'\n                      disabled={product.countInStock === 0}\n                    >\n                      Add To Cart\n                    </Button>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6}>\n              <h2>Reviews</h2>\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\n              <ListGroup variant='flush'>\n                {product.reviews.map((review) => (\n                  <ListGroup.Item key={review._id}>\n                    <strong>{review.name}</strong>\n                    <Rating value={review.rating} />\n                    <p>{review.createdAt.substring(0, 10)}</p>\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n                <ListGroup.Item>\n                  <h2>Write a Customer Review</h2>\n                  {successProductReview && (\n                    <Message variant='success'>\n                      Review submitted successfully\n                    </Message>\n                  )}\n                  {loadingProductReview && <Loader />}\n                  {errorProductReview && (\n                    <Message variant='danger'>{errorProductReview}</Message>\n                  )}\n                  {userInfo ? (\n                    <Form onSubmit={submitHandler}>\n                      <Form.Group controlId='rating'>\n                        <Form.Label>Rating</Form.Label>\n                        <Form.Control\n                          as='select'\n                          value={rating}\n                          onChange={(e) => setRating(e.target.value)}\n                        >\n                          <option value=''>Select...</option>\n                          <option value='1'>1 - Poor</option>\n                          <option value='2'>2 - Fair</option>\n                          <option value='3'>3 - Good</option>\n                          <option value='4'>4 - Very Good</option>\n                          <option value='5'>5 - Excellent</option>\n                        </Form.Control>\n                      </Form.Group>\n                      <Form.Group controlId='comment'>\n                        <Form.Label>Comment</Form.Label>\n                        <Form.Control\n                          as='textarea'\n                          row='3'\n                          value={comment}\n                          onChange={(e) => setComment(e.target.value)}\n                        ></Form.Control>\n                      </Form.Group>\n                      <Button\n                        disabled={loadingProductReview}\n                        type='submit'\n                        variant='primary'\n                      >\n                        Submit\n                      </Button>\n                    </Form>\n                  ) : (\n                    <Message>\n                      Please <Link to='/login'>sign in</Link> to write a review{' '}\n                    </Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ProductScreen","/Users/cctnsw/Desktop/BarnesNoble/frontend/src/components/Rating.jsx",[],["50","51"],"/Users/cctnsw/Desktop/BarnesNoble/frontend/src/components/Product.jsx",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":1,"column":17,"nodeType":"58","messageId":"59","endLine":1,"endColumn":26},{"ruleId":"56","severity":1,"message":"57","line":1,"column":17,"nodeType":"58","messageId":"59","endLine":1,"endColumn":26},{"ruleId":"56","severity":1,"message":"57","line":1,"column":17,"nodeType":"58","messageId":"59","endLine":1,"endColumn":26},{"ruleId":"60","severity":1,"message":"61","line":44,"column":6,"nodeType":"62","endLine":44,"endColumn":45,"suggestions":"63"},{"ruleId":"52","replacedBy":"64"},{"ruleId":"54","replacedBy":"65"},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'product._id'. Either include it or remove the dependency array.","ArrayExpression",["68"],["66"],["67"],"no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},"Update the dependencies array to be: [dispatch, match, product._id, successProductReview]",{"range":"71","text":"72"},[1475,1514],"[dispatch, match, product._id, successProductReview]"]